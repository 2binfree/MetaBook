# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Neo4j\Neo4jBundle\Factory\ClientFactory:
        alias: neo4j.factory.client
        public: true

    app.neo4j.connection:
        decorates: neo4j.connection.default
        class: GraphAware\Neo4j\Client\Connection\Connection
        public: true
        arguments:
            - 'default'
            - '%env(NEO4J_CONNECTION)%'

    app.neo4j.client:
        decorates: neo4j.client
        class: GraphAware\Neo4j\Client\Client
        public: true
        # pass the old service as an argument
        arguments: ['@neo4j.connection_manager']

    app.neo4j.entity_manager:
        decorates: neo4j.entity_manager
        class: GraphAware\Neo4j\OGM\EntityManager
        public: true
        arguments:
            $databaseDriver: '@neo4j.client'
            $cacheDirectory: '%kernel.project_dir%/OGMCache'

    App\Service\BookManager:
        arguments:
            $bookBaseDirectory: '%kernel.project_dir%/%env(BOOK_DIR)%'

    App\Service\DBTools:
        arguments:
            $manager: '@app.neo4j.entity_manager'
